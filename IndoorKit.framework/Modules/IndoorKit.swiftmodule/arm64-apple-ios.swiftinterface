// swift-interface-format-version: 1.0
// swift-compiler-version: Apple Swift version 5.5.2 (swiftlang-1300.0.47.5 clang-1300.0.29.30)
// swift-module-flags: -target arm64-apple-ios10.0 -enable-objc-interop -enable-library-evolution -swift-version 5 -enforce-exclusivity=checked -Onone -module-name IndoorKit
import AVFoundation
import CoreGraphics
import CoreLocation
import CoreMotion
import Foundation
@_exported import IndoorKit
import Swift
import UIKit
import _Concurrency
public protocol IndoorLocationDelegate : AnyObject {
  func onLocationChanged(location: CoreLocation.CLLocation, floor: Swift.Int)
  func onHeadingChanged(heading: Swift.Double)
  func onOrientationChanged(orientation: IndoorKit.PhoneOrientation)
  func onClusterChanged(cluster: Swift.Int)
  func onLocationNotFound()
  func onInitMapDone(walls: [[IndoorKit.Wall]], clusters: [[IndoorKit.Cluster]], stairs: [[IndoorKit.Stair]], elevator: [IndoorKit.Wall])
}
public class IndoorLocationService {
  weak public var delegate: IndoorKit.IndoorLocationDelegate?
  public init()
  public func startUpdateLocation(zone: IndoorKit.IndoorZone)
  public func stopUpdateLocation()
  public func restartUpdateLocation()
  public func waitForPocket()
  public func cancelWaitForPocket()
  public func backToHand()
  @objc deinit
}
public class Stair {
  public init(path: [CoreLocation.CLLocationCoordinate2D])
  public func getCoordinatePath() -> [CoreLocation.CLLocationCoordinate2D]
  public func getPointPath() -> [CoreGraphics.CGPoint]
  @objc deinit
}
public enum IndoorZone {
  case P27
  case FVH
  case MVH
  case MB
  public static func == (a: IndoorKit.IndoorZone, b: IndoorKit.IndoorZone) -> Swift.Bool
  public func hash(into hasher: inout Swift.Hasher)
  public var hashValue: Swift.Int {
    get
  }
}
public class Wall {
  public init(a: CoreLocation.CLLocationCoordinate2D, b: CoreLocation.CLLocationCoordinate2D)
  public func getCoordinatePath() -> [CoreLocation.CLLocationCoordinate2D]
  public func getPointPath() -> [CoreGraphics.CGPoint]
  @objc deinit
}
public enum PhoneOrientation : Swift.String {
  case HAND
  case POCKET
  public init?(rawValue: Swift.String)
  public typealias RawValue = Swift.String
  public var rawValue: Swift.String {
    get
  }
}
public class Cluster {
  public init(path: [CoreLocation.CLLocationCoordinate2D], index: Swift.Int, color: UIKit.UIColor)
  public func getCoordinatePath() -> [CoreLocation.CLLocationCoordinate2D]
  public func getPointPath() -> [CoreGraphics.CGPoint]
  public func getIndex() -> Swift.Int
  public func getColor() -> UIKit.UIColor
  @objc deinit
}
